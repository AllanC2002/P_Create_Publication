name: Docker

on:
  schedule:
    - cron: '35 18 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_REPO }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  deploy:
    name: main create_publication
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_IP_PROD }}
          username: ubuntu
          key: ${{ secrets.EC2_PEM_PROD }}
          script: |
            docker stop project_create_publication || true
            docker rm project_create_publication || true
            docker rmi ${{ secrets.DOCKER_REPO }}:main || true

            docker pull ${{ secrets.DOCKER_REPO }}:main

            docker run -d \
              --restart always \
              --name project_create_publication \
              -p 8080:8080 \
              -e MONGO_HOSTIP=${{ secrets.MONGO_HOSTIP_PROD }} \
              -e MONGO_PORT=${{ secrets.MONGO_PORT }} \
              -e MONGO_USER=${{ secrets.MONGO_USER }} \
              -e MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
              -e MONGO_DB=${{ secrets.MONGO_DB }} \
              -e REDIS_HOSTIP=${{ secrets.REDIS_HOSTIP_PROD }} \
              -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
              -e REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
              -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
              ${{ secrets.DOCKER_REPO }}:main
